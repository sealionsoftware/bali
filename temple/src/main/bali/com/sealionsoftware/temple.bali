import bali.Executable
import bali.Boolean
import bali.String
import bali.Exception
import bali.io.Socket
import bali.io.ServerSocket
import bali.io.SocketMonitor
import bali.Count
import bali.Counter
import bali.monitor.ConnectionMonitor
import bali.Integer

object TempleServer implements Executable {

	method execute {

		CONSOLE << "Starting Temple";
		ServerSocket port = NETWORK_MANAGER.openPort(8080);
		ConnectionMonitor[Socket]! monitor = new SocketMonitor(port);
		Count count = new Counter();

		while (true){

			monitor.waitForConnection();
			Integer! requestNo = ++count;

			run {

				Socket connection = monitor.getConnection();

				try {

					CONSOLE << "Receiving Request";

	                while (true) {
                        String? read = << connection;
                        if (?read & read.length() > 0){
                            CONSOLE << read;
                        } else {
                            break;
                        }
                    }

                    connection << "HTTP/1.1 200 OK";
                    connection << "Content-Type: text/html;";
                    connection << "";
                    connection << "Hello World " + NUMBER_FACTORY.format(requestNo);

	                CONSOLE << "Response Completed";

				} catch (Exception e){
					CONSOLE << "Error Processing Request: " + e.getMessage();
				}
				connection.close();
			}
		}

		port.close();
		CONSOLE << "Temple Exiting";
	}

}

