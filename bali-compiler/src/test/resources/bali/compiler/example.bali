// Imports

import bali.String
import bali.Number
import bali.Boolean
import bali.Iterable

// Constants

constant Number GLOBAL_CONSTANT = 2

// Functions

//function Number aFunction(Number argument){
//	return GLOBAL_CONSTANT.add(argument)
//}

// Beans

bean ABean {

	property Number aNumber

}

bean AnotherBean extends ABean {

	property String aString

}

// Interfaces

interface ASuperInterface {

	declare Number aMethod(Number anArgument)

}

interface AnInterface extends ASuperInterface {

	declare Number anotherMethod(Number anArgument)

}

// Classes

object AnImplementation(Number aParameter) implements AnInterface {

 	field Number aField

 	method Number aMethod(Number anArgument){

 	    Number aVariable = anArgument + GLOBAL_CONSTANT;
		Iterable[Number] numbers = [3,4,5];
 	    Boolean stop = false;

 	    while(!stop){
	        for (Number number : numbers){
	            aVariable = aVariable + number;
	        }
	        if (aVariable > 100){
	            stop = true;
	        }
 	    }

 	    ABean aBean = new AnotherBean(
 	        aString: "test",
 	        aNumber: 1
 	    );
        aBean.aNumber = 4;

        run {
            CONSOLE << "Hello World";
        }

		return anArgument;
 	}

	method Number anotherMethod(Number anArgument){
        return anArgument;
    }
}
